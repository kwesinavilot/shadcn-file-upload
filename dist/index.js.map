{"version":3,"file":"index.js","sources":["../src/FileUpload.jsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { UploadIcon, Trash2 } from 'lucide-react';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst FileUpload = ({\r\n    mode = 'vertical',\r\n    uploadMode = 'single',\r\n    defaultText = 'Upload file',\r\n    maxSize = 20 * 1024 * 1024, // 5MB\r\n    acceptedFileTypes = {\r\n        'application/pdf': ['.pdf'],\r\n        'application/msword': ['.doc'],\r\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx']\r\n    },\r\n    onFilesUploaded\r\n}) => {\r\n    const [files, setFiles] = useState([]);\r\n\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        const newFiles = acceptedFiles.map(file => Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n        }));\r\n\r\n        if (uploadMode === 'single') {\r\n            setFiles(newFiles.slice(0, 1));\r\n            onFilesUploaded(newFiles[0]);\r\n        } else {\r\n            setFiles(prev => [...prev, ...newFiles]);\r\n            onFilesUploaded(newFiles);\r\n        }\r\n    }, [uploadMode, onFilesUploaded]);\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n        onDrop,\r\n        accept: acceptedFileTypes,\r\n        maxSize,\r\n        multiple: uploadMode === 'multi'\r\n    });\r\n\r\n    const removeFile = (file) => {\r\n        const newFiles = files.filter(f => f !== file);\r\n        setFiles(newFiles);\r\n        onFilesUploaded(uploadMode === 'single' ? null : newFiles);\r\n    };\r\n\r\n    const dropzoneClasses = cn(\r\n        \"border-2 border-dashed rounded-lg p-4 text-center cursor-pointer transition-colors\",\r\n        isDragActive ? \"border-blue-500 bg-blue-50\" : \"border-gray-300 hover:border-gray-400\",\r\n        mode === 'horizontal' ? \"flex items-center justify-center space-x-4\" : \"flex flex-col justify-center items-center space-y-2\"\r\n    );\r\n\r\n    const renderDropzone = () => (\r\n        <div {...getRootProps({ className: dropzoneClasses })}>\r\n            <input {...getInputProps()} />\r\n            <UploadIcon className=\"w-8 h-8 text-gray-400\" />\r\n            <p className=\"text-sm text-gray-600\">{defaultText}</p>\r\n            <p className=\"text-xs text-gray-500\">(PDF, DOC, DOCX up to 5MB)</p>\r\n        </div>\r\n    );\r\n\r\n    const renderFileList = () => (\r\n        <div className=\"mt-4 space-y-2\">\r\n            {files.map((file, index) => (\r\n                <div key={index} className=\"flex items-center justify-between p-3 bg-white rounded-md border border-gray-200 shadow\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <div className=\"w-8 h-8 bg-gray-300 rounded flex items-center justify-center p-5\">\r\n                            <span className=\"text-xs font-medium\">{file.name.split('.').pop().toUpperCase()}</span>\r\n                        </div>\r\n\r\n                        <div className='flex flex-col space-y-1'>\r\n                            <p className=\"text-sm font-medium truncate max-w-xs\">{file.name}</p>\r\n                            <p className=\"text-xs text-gray-500\">{(file.size / 1024).toFixed(2)} KB</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Button variant=\"ghost\" size=\"sm\" onClick={() => removeFile(file)}>\r\n                        <Trash2 className=\"w-4 h-4\" />\r\n                    </Button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {(uploadMode === 'multi' || files.length === 0) && renderDropzone()}\r\n            {renderFileList()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUpload;"],"names":["FileUpload","mode","uploadMode","defaultText","maxSize","acceptedFileTypes","onFilesUploaded","files","setFiles","useState","onDrop","useCallback","acceptedFiles","newFiles","map","file","Object","assign","preview","URL","createObjectURL","slice","prev","getRootProps","getInputProps","isDragActive","useDropzone","accept","multiple","removeFile","filter","f","dropzoneClasses","cn","renderDropzone","React","createElement","className","UploadIcon","renderFileList","index","key","name","split","pop","toUpperCase","size","toFixed","Button","variant","onClick","Trash2","length"],"mappings":"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"}