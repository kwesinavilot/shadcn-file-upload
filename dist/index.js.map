{"version":3,"file":"index.js","sources":["../src/FileUpload.jsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { UploadIcon, Trash2 } from 'lucide-react';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\n/**\r\n * A React component for uploading files. Supports single and multiple file uploads with validation.\r\n *\r\n * @param {Object} props Component props\r\n * @param {string} [props.layout=vertical] The layout of the component. Can be 'vertical' or 'horizontal'.\r\n * @param {string} [props.uploadMode=single] The file upload mode. Can be 'single' or 'multi'.\r\n * @param {string} [props.defaultText='Select or drag and drop your files here'] The text displayed in the upload area when no files are selected.\r\n * @param {string} [props.otherText='(PDF, DOC, DOCX up to 20MB)'] Additional text displayed below the default text.\r\n * @param {number} [props.maxSize=20 * 1024 * 1024] The maximum allowed file size in bytes. Files larger than this will be rejected.\r\n * @param {Object} [props.acceptedFileTypes] An object specifying the accepted file types. The keys are MIME types, and the values are arrays of corresponding file extensions.\r\n * @param {Function} props.onFilesUploaded A callback function that is called when files are uploaded or removed.\r\n * @param {Object} [props.zodSchema] A Zod schema for file validation.\r\n * @param {string|string[]} [props.errors] External errors to display.\r\n * @returns {ReactElement} The component element\r\n */\r\nconst FileUpload = ({\r\n    layout = 'vertical',\r\n    uploadMode = 'single',\r\n    defaultText = 'Select or drag and drop your files here',\r\n    otherText = '(PDF, DOC, DOCX up to 20MB)',\r\n    maxSize = 20 * 1024 * 1024, // 20MB\r\n    acceptedFileTypes = {\r\n        'application/pdf': ['.pdf'],\r\n        'application/msword': ['.doc'],\r\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx']\r\n    },\r\n    onFilesUploaded,\r\n    zodSchema,\r\n    errors: externalErrors\r\n}) => {\r\n    const [files, setFiles] = useState([]);\r\n    const [internalErrors, setInternalErrors] = useState(null);\r\n\r\n    /**\r\n     * Validates a file using the provided Zod schema.\r\n     * If the schema is not provided, this function does nothing.\r\n     * If the file is invalid, it logs the error and returns the first error message.\r\n     * If the file is valid, it returns null.\r\n     * \r\n     * @param {File} file The file to validate\r\n     * @returns {string|null} The error message if the file is invalid, or null if it is valid\r\n     */\r\n    const validateFile = (file) => {\r\n        if (!file) {\r\n            return \"No file selected\";\r\n        }\r\n\r\n        if (zodSchema) {\r\n            try {\r\n                zodSchema.parse({ file: file });\r\n                return null;\r\n            } catch (error) {\r\n                console.log(\"Validation error:\", error);\r\n                return error.errors[0]?.message || \"Invalid file\";\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n\r\n    /**\r\n     * Handles the files dropped into the component.\r\n     * Validates the files using the provided Zod schema.\r\n     * If the schema is not provided, this function does nothing.\r\n     * If the files are invalid, it logs the error and sets the internal error state.\r\n     * If the files are valid, it updates the component's state with the new files and calls the onFilesUploaded callback.\r\n     * \r\n     * @param {File[]} acceptedFiles The files dropped into the component\r\n     */\r\n    const onDrop = useCallback((acceptedFiles) => {\r\n        if (acceptedFiles.length === 0) {\r\n            setInternalErrors(\"No valid files were dropped\");\r\n            return;\r\n        }\r\n\r\n        const newFiles = acceptedFiles.map(file => Object.assign(file, {\r\n            preview: URL.createObjectURL(file)\r\n        }));\r\n\r\n        let validationError = null;\r\n        if (uploadMode === 'single') {\r\n            validationError = validateFile(newFiles[0]);\r\n\r\n            if (!validationError) {\r\n                setFiles(newFiles.slice(0, 1));\r\n                onFilesUploaded(newFiles[0]);\r\n                setInternalErrors(null);\r\n            } else {\r\n                setInternalErrors(validationError);\r\n            }\r\n        } else {\r\n            // Validate all files\r\n            const errors = newFiles.map(validateFile).filter(Boolean);\r\n\r\n            if (errors.length === 0) {\r\n                setFiles(prev => [...prev, ...newFiles]);\r\n                onFilesUploaded(newFiles);\r\n                setInternalErrors(null);\r\n            } else {\r\n                setInternalErrors(errors[0]); // Display only the first error\r\n            }\r\n        }\r\n    }, [uploadMode, onFilesUploaded, zodSchema]);\r\n\r\n    // Configure the dropzone\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n        onDrop,\r\n        accept: acceptedFileTypes,\r\n        maxSize,\r\n        multiple: uploadMode === 'multi'\r\n    });\r\n\r\n    /**\r\n     * Removes a file from the list of selected files.\r\n     * @param {File} file - The file to remove\r\n     */\r\n    const removeFile = (file) => {\r\n        const newFiles = files.filter(f => f !== file);\r\n        setFiles(newFiles);\r\n        onFilesUploaded(uploadMode === 'single' ? null : newFiles);\r\n        setInternalErrors(null);\r\n    };\r\n\r\n    // dynamic styling \r\n    const dropzoneClasses = cn(\r\n        \"border-2 border-dashed rounded-lg p-4 text-center cursor-pointer transition-colors\",\r\n        isDragActive ? \"border-blue-500 bg-blue-50\" : (internalErrors || externalErrors) ? \"border-red-500\" : \"border-gray-300 hover:border-gray-400\",\r\n        layout === 'horizontal' ? \"flex items-center justify-center space-x-4\" : \"flex flex-col justify-center items-center space-y-2\"\r\n    );\r\n\r\n    /**\r\n     * Renders the dropzone component with the configured styles, default text, and optional errors.\r\n     * @returns {JSX.Element} The rendered dropzone component\r\n     */\r\n    const renderDropzone = () => (\r\n        <>\r\n            <div {...getRootProps({ className: dropzoneClasses })}>\r\n                <input {...getInputProps()} />\r\n                <UploadIcon className=\"w-8 h-8 text-gray-400\" />\r\n                <p className=\"text-sm text-gray-600\">{defaultText}</p>\r\n                <p className=\"text-xs text-gray-500\">{otherText}</p>\r\n            </div>\r\n\r\n            {(internalErrors || externalErrors) && (\r\n                <p className=\"text-xs font-medium text-red-500 mt-2\">\r\n                    {internalErrors || (Array.isArray(externalErrors) ? externalErrors.join(', ') : externalErrors)}\r\n                </p>\r\n            )}\r\n        </>\r\n    );\r\n\r\n    /**\r\n     * Renders the list of files that have been selected.\r\n     * This includes the file name, size, and an option to remove the file.\r\n     * @returns {JSX.Element} The rendered file list component\r\n     */\r\n    const renderFileList = () => (\r\n        <div className=\"mt-4 space-y-2\">\r\n            {files.map((file, index) => (\r\n                <div key={index} className=\"flex items-center justify-between p-3 bg-white rounded-md border border-gray-200 shadow\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <div className=\"w-8 h-8 bg-gray-300 rounded flex items-center justify-center p-5\">\r\n                            <span className=\"text-xs font-medium\">{file.name.split('.').pop().toUpperCase()}</span>\r\n                        </div>\r\n\r\n                        <div className='flex flex-col space-y-1'>\r\n                            <p className=\"text-sm font-medium truncate max-w-xs\">{file.name}</p>\r\n                            <p className=\"text-xs text-gray-500\">{(file.size / 1024).toFixed(2)} KB</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Button variant=\"ghost\" size=\"sm\" onClick={() => removeFile(file)}>\r\n                        <Trash2 className=\"w-4 h-4\" />\r\n                    </Button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {(uploadMode === 'multi' || files.length === 0) && renderDropzone()}\r\n            {renderFileList()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUpload;"],"names":["FileUpload","layout","uploadMode","defaultText","otherText","maxSize","acceptedFileTypes","onFilesUploaded","zodSchema","errors","externalErrors","files","setFiles","useState","internalErrors","setInternalErrors","validateFile","file","parse","error","console","log","message","onDrop","useCallback","acceptedFiles","length","newFiles","map","Object","assign","preview","URL","createObjectURL","validationError","slice","filter","Boolean","prev","getRootProps","getInputProps","isDragActive","useDropzone","accept","multiple","removeFile","f","dropzoneClasses","cn","renderDropzone","React","createElement","Fragment","className","UploadIcon","Array","isArray","join","renderFileList","index","key","name","split","pop","toUpperCase","size","toFixed","Button","variant","onClick","Trash2"],"mappings":";;;;;;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,UAAU,GAAGA,CAAC;AAChBC,EAAAA,MAAM,GAAG,UAAU;AACnBC,EAAAA,UAAU,GAAG,QAAQ;AACrBC,EAAAA,WAAW,GAAG,yCAAyC;AACvDC,EAAAA,SAAS,GAAG,6BAA6B;AACzCC,EAAAA,OAAO,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;AAAE;AAC5BC,EAAAA,iBAAiB,GAAG;IAChB,iBAAiB,EAAE,CAAC,MAAM,CAAC;IAC3B,oBAAoB,EAAE,CAAC,MAAM,CAAC;IAC9B,yEAAyE,EAAE,CAAC,OAAO,CAAA;GACtF;EACDC,eAAe;EACfC,SAAS;AACTC,EAAAA,MAAM,EAAEC,cAAAA;AACZ,CAAC,KAAK;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,cAAQ,CAAC,EAAE,CAAC,CAAA;EACtC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGF,cAAQ,CAAC,IAAI,CAAC,CAAA;;AAE1D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMG,YAAY,GAAIC,IAAI,IAAK;IAC3B,IAAI,CAACA,IAAI,EAAE;AACP,MAAA,OAAO,kBAAkB,CAAA;AAC7B,KAAA;AAEA,IAAA,IAAIT,SAAS,EAAE;MACX,IAAI;QACAA,SAAS,CAACU,KAAK,CAAC;AAAED,UAAAA,IAAI,EAAEA,IAAAA;AAAK,SAAC,CAAC,CAAA;AAC/B,QAAA,OAAO,IAAI,CAAA;OACd,CAAC,OAAOE,KAAK,EAAE;AACZC,QAAAA,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,KAAK,CAAC,CAAA;QACvC,OAAOA,KAAK,CAACV,MAAM,CAAC,CAAC,CAAC,EAAEa,OAAO,IAAI,cAAc,CAAA;AACrD,OAAA;AACJ,KAAA;AAEA,IAAA,OAAO,IAAI,CAAA;GACd,CAAA;;AAGD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,EAAA,MAAMC,MAAM,GAAGC,iBAAW,CAAEC,aAAa,IAAK;AAC1C,IAAA,IAAIA,aAAa,CAACC,MAAM,KAAK,CAAC,EAAE;MAC5BX,iBAAiB,CAAC,6BAA6B,CAAC,CAAA;AAChD,MAAA,OAAA;AACJ,KAAA;AAEA,IAAA,MAAMY,QAAQ,GAAGF,aAAa,CAACG,GAAG,CAACX,IAAI,IAAIY,MAAM,CAACC,MAAM,CAACb,IAAI,EAAE;AAC3Dc,MAAAA,OAAO,EAAEC,GAAG,CAACC,eAAe,CAAChB,IAAI,CAAA;AACrC,KAAC,CAAC,CAAC,CAAA;IAEH,IAAIiB,eAAe,GAAG,IAAI,CAAA;IAC1B,IAAIhC,UAAU,KAAK,QAAQ,EAAE;AACzBgC,MAAAA,eAAe,GAAGlB,YAAY,CAACW,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;MAE3C,IAAI,CAACO,eAAe,EAAE;QAClBtB,QAAQ,CAACe,QAAQ,CAACQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;AAC9B5B,QAAAA,eAAe,CAACoB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;QAC5BZ,iBAAiB,CAAC,IAAI,CAAC,CAAA;AAC3B,OAAC,MAAM;QACHA,iBAAiB,CAACmB,eAAe,CAAC,CAAA;AACtC,OAAA;AACJ,KAAC,MAAM;AACH;AACA,MAAA,MAAMzB,MAAM,GAAGkB,QAAQ,CAACC,GAAG,CAACZ,YAAY,CAAC,CAACoB,MAAM,CAACC,OAAO,CAAC,CAAA;AAEzD,MAAA,IAAI5B,MAAM,CAACiB,MAAM,KAAK,CAAC,EAAE;QACrBd,QAAQ,CAAC0B,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE,GAAGX,QAAQ,CAAC,CAAC,CAAA;QACxCpB,eAAe,CAACoB,QAAQ,CAAC,CAAA;QACzBZ,iBAAiB,CAAC,IAAI,CAAC,CAAA;AAC3B,OAAC,MAAM;AACHA,QAAAA,iBAAiB,CAACN,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,OAAA;AACJ,KAAA;GACH,EAAE,CAACP,UAAU,EAAEK,eAAe,EAAEC,SAAS,CAAC,CAAC,CAAA;;AAE5C;EACA,MAAM;IAAE+B,YAAY;IAAEC,aAAa;AAAEC,IAAAA,YAAAA;GAAc,GAAGC,yBAAW,CAAC;IAC9DnB,MAAM;AACNoB,IAAAA,MAAM,EAAErC,iBAAiB;IACzBD,OAAO;IACPuC,QAAQ,EAAE1C,UAAU,KAAK,OAAA;AAC7B,GAAC,CAAC,CAAA;;AAEF;AACJ;AACA;AACA;EACI,MAAM2C,UAAU,GAAI5B,IAAI,IAAK;IACzB,MAAMU,QAAQ,GAAGhB,KAAK,CAACyB,MAAM,CAACU,CAAC,IAAIA,CAAC,KAAK7B,IAAI,CAAC,CAAA;IAC9CL,QAAQ,CAACe,QAAQ,CAAC,CAAA;IAClBpB,eAAe,CAACL,UAAU,KAAK,QAAQ,GAAG,IAAI,GAAGyB,QAAQ,CAAC,CAAA;IAC1DZ,iBAAiB,CAAC,IAAI,CAAC,CAAA;GAC1B,CAAA;;AAED;EACA,MAAMgC,eAAe,GAAGC,QAAE,CACtB,oFAAoF,EACpFP,YAAY,GAAG,4BAA4B,GAAI3B,cAAc,IAAIJ,cAAc,GAAI,gBAAgB,GAAG,uCAAuC,EAC7IT,MAAM,KAAK,YAAY,GAAG,4CAA4C,GAAG,qDAC7E,CAAC,CAAA;;AAED;AACJ;AACA;AACA;AACI,EAAA,MAAMgD,cAAc,GAAGA,mBACnBC,yBAAA,CAAAC,aAAA,CAAAD,yBAAA,CAAAE,QAAA,EACIF,IAAAA,eAAAA,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAASZ,YAAY,CAAC;AAAEc,IAAAA,SAAS,EAAEN,eAAAA;AAAgB,GAAC,CAAC,eACjDG,yBAAA,CAAAC,aAAA,CAAWX,OAAAA,EAAAA,aAAa,EAAK,CAAC,eAC9BU,yBAAA,CAAAC,aAAA,CAACG,sBAAU,EAAA;AAACD,IAAAA,SAAS,EAAC,uBAAA;AAAuB,GAAE,CAAC,eAChDH,yBAAA,CAAAC,aAAA,CAAA,GAAA,EAAA;AAAGE,IAAAA,SAAS,EAAC,uBAAA;AAAuB,GAAA,EAAElD,WAAe,CAAC,eACtD+C,yBAAA,CAAAC,aAAA,CAAA,GAAA,EAAA;AAAGE,IAAAA,SAAS,EAAC,uBAAA;GAAyBjD,EAAAA,SAAa,CAClD,CAAC,EAEL,CAACU,cAAc,IAAIJ,cAAc,kBAC9BwC,yBAAA,CAAAC,aAAA,CAAA,GAAA,EAAA;AAAGE,IAAAA,SAAS,EAAC,uCAAA;AAAuC,GAAA,EAC/CvC,cAAc,KAAKyC,KAAK,CAACC,OAAO,CAAC9C,cAAc,CAAC,GAAGA,cAAc,CAAC+C,IAAI,CAAC,IAAI,CAAC,GAAG/C,cAAc,CAC/F,CAET,CACL,CAAA;;AAED;AACJ;AACA;AACA;AACA;AACI,EAAA,MAAMgD,cAAc,GAAGA,mBACnBR,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAKE,IAAAA,SAAS,EAAC,gBAAA;GACV1C,EAAAA,KAAK,CAACiB,GAAG,CAAC,CAACX,IAAI,EAAE0C,KAAK,kBACnBT,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAKS,IAAAA,GAAG,EAAED,KAAM;AAACN,IAAAA,SAAS,EAAC,yFAAA;GACvBH,eAAAA,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAKE,IAAAA,SAAS,EAAC,6BAAA;GACXH,eAAAA,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAKE,IAAAA,SAAS,EAAC,kEAAA;GACXH,eAAAA,yBAAA,CAAAC,aAAA,CAAA,MAAA,EAAA;AAAME,IAAAA,SAAS,EAAC,qBAAA;GAAuBpC,EAAAA,IAAI,CAAC4C,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE,CAACC,WAAW,EAAS,CACrF,CAAC,eAENd,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAKE,IAAAA,SAAS,EAAC,yBAAA;GACXH,eAAAA,yBAAA,CAAAC,aAAA,CAAA,GAAA,EAAA;AAAGE,IAAAA,SAAS,EAAC,uCAAA;AAAuC,GAAA,EAAEpC,IAAI,CAAC4C,IAAQ,CAAC,eACpEX,yBAAA,CAAAC,aAAA,CAAA,GAAA,EAAA;AAAGE,IAAAA,SAAS,EAAC,uBAAA;GAAyB,EAAA,CAACpC,IAAI,CAACgD,IAAI,GAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,EAAC,KAAM,CACzE,CACJ,CAAC,eAENhB,yBAAA,CAAAC,aAAA,CAACgB,aAAM,EAAA;AAACC,IAAAA,OAAO,EAAC,OAAO;AAACH,IAAAA,IAAI,EAAC,IAAI;AAACI,IAAAA,OAAO,EAAEA,MAAMxB,UAAU,CAAC5B,IAAI,CAAA;AAAE,GAAA,eAC9DiC,yBAAA,CAAAC,aAAA,CAACmB,kBAAM,EAAA;AAACjB,IAAAA,SAAS,EAAC,SAAA;AAAS,GAAE,CACzB,CACP,CACR,CACA,CACR,CAAA;EAED,oBACIH,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA,IAAA,EACK,CAACjD,UAAU,KAAK,OAAO,IAAIS,KAAK,CAACe,MAAM,KAAK,CAAC,KAAKuB,cAAc,EAAE,EAClES,cAAc,EACd,CAAC,CAAA;AAEd;;;;"}